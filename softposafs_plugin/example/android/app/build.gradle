plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> 
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.softposafs_plugin_example"
    compileSdk 33  // ðŸ‘ˆ Use "compileSdk" instead of "compileSdkVersion" (newer AGP syntax)

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.softposafs_plugin_example"
        minSdk 28  // ðŸ‘ˆ Use "minSdk" instead of "minSdkVersion"
        targetSdk flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        pickFirst 'META-INF/io.netty.versions.properties'  // ðŸ‘ˆ ADD THIS LINE
    }

    // ðŸ‘‡ Fix duplicate Kotlin classes
    configurations {
        all*.exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
        all*.exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
    }
}

flutter {
    source '../..'
}

// ðŸ‘‡ Local .aar files repository
repositories {
    flatDir {
        dirs project(':softposafs_plugin').file('libs')
    }
}

dependencies {
    implementation(name: 'SoftPos-v1.3.66.35-Release_Test', ext: 'aar')
    implementation(name: 'SoftPosPIN-v1.3.63-Release', ext: 'aar')
    implementation(name: 'afs-pin-app-test-release-1.3.25', ext: 'aar')

    implementation project(":softposafs_plugin")
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

// ðŸ‘‡ Force Kotlin version to avoid conflicts â€” MUST be at the bottom
configurations.all {
    resolutionStrategy {
        force 'org.jetbrains.kotlin:kotlin-stdlib:1.8.0'
        force 'org.jetbrains.kotlin:kotlin-stdlib-common:1.8.0'
    }
}
 