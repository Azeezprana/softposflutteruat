group 'com.example.softposafs_plugin'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.7.10'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories { 
        google()
        mavenCentral()
        flatDir { dirs 'libs' } // <- Important

        // flatDir not needed since using project modules
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'


android {
    namespace 'com.example.softposafs_plugin'  // ✅ Directly declared for AGP 7.3.0+

    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
    }

    defaultConfig {
        minSdkVersion 28
    }

    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    def flutterRoot = localProperties.getProperty('flutter.sdk')

    dependencies {
        // ✅ UNCOMMENTED — Essential for your .aar files to be included
  

        compileOnly files("$flutterRoot/bin/cache/artifacts/engine/android-arm64-release/flutter.jar")

        implementation(name: 'SoftPos-v1.3.66.35-Release_Test', ext: 'aar')
        implementation(name: 'SoftPosPIN-v1.3.63-Release', ext: 'aar')
        implementation(name: 'afs-pin-app-test-release-1.3.25', ext: 'aar')



        // implementation project(':softpos')
        // implementation project(':softpospin')
        // implementation project(':afspinapp')

        // implementation(files("../android/libs/SoftPos-v1.3.49-Debug_Test.aar"))
        // implementation(files("../android/libs/SoftPosPIN-v1.4.94-Debug.aar"))
        // implementation(files("../android/libs/afs-pin-app-test-debug-1.3.31.aar"))

        // Android + third-party dependencies
        implementation "androidx.appcompat:appcompat:1.2.0"
        implementation "com.squareup.retrofit2:converter-moshi:2.6.4"
        implementation "com.squareup.retrofit2:converter-scalars:2.6.4"
        implementation "androidx.room:room-runtime:2.2.5"
        annotationProcessor "androidx.room:room-compiler:2.2.5"
        implementation "com.google.android.gms:play-services-safetynet:17.0.0"
        implementation "com.squareup.okhttp3:logging-interceptor:3.9.1"
        implementation "com.google.android.play:integrity:1.1.0"
        implementation "com.google.android.gms:play-services-ads-identifier:17.0.0"
        implementation "com.squareup.okhttp3:okhttp-urlconnection:4.9.3"
        implementation "software.amazon.awssdk:cloudwatchlogs:2.20.30"
        implementation "com.google.code.gson:gson:2.8.6"
        implementation "com.google.gms:google-services:4.3.15"   
        implementation "androidx.annotation:annotation:1.6.0" 

        // Unit test
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.mockito:mockito-core:5.0.0' 
        
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}

 